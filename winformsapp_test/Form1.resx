<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACEHwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAAB8+SURBVHja7Z1ZcBXXtYYPPOTBT3m5rpCKyy9OHvN0HWIDMdhgBmNjO8wgJGQQCmK2
        hZhBTEYYbEwAjYwSGhAIiUESowBjQOORhASaEam6txLXrbqpm7ou57rIuvvf57Q4YCGG092nu/Wvqr90
        6qh7r1Wn1/r27t27u30+Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1G
        o9FoNEdYV1e7r6uj1dfV2UZRfSiQIzQPWGfnTwv+Xmc7/r6k9LLSK0qvUv1arwRz4aWujvaf5ktXBwvJ
        bXa/7SdkH6j0mlK0UqpShVKzUpdSN9Wv1RXMBeREWjBHXgvmzMMc6mphYbliqN/5kOKdnW0D1N/BwQOL
        g/1ASSiqD/1L6X4wZ5A7A0JBQHN08T/S6w9SSlH6jklNvaC+C+bQoEBOtRMCLin+15WuMYEpk3QtmFMc
        CThzhh+Tez0HZ7hSK5OWMlnIqREPJ5MJAYfM9Hc+3vOz+CkrIdAzEujo4BUCJw39B3HYT9l0OjCIpwIO
        sO6HxT8gOFnDBKXsUIo67dRXB+7d4yjACb3/YM72UzZfHRjMUYAzADAweM2WiUnZKZVz7QMJgMgv+Hkt
        uHCDSUnZqfvB3PNhCTHNdgD0rPOPDq7eYlJSdupBMPf0PSe0CAz/73VoAHD4T0VKqd1dHVhyzoKM0Pn/
        S8GbOJiMVCRUEcxBFmSEAPBy8E4uJiMVCTUHc5AFGSEAvBK8nZPJSEVCXcEcZEFGCACvBm/zZTJSkVB3
        MAdZkAQARQDQPA2Ae13tlAtEABAAphY9/rbcbZbbjfXS2OCnHCwco5a7TY8cOwKAAHihwu9ob5Hr31yT
        I4ezZeeOr2TL5m2yaeNWysHCMdrxxZdy6OBhuXrlirS33bUSBASAFwGAhGluapDsI9mydk2yJH62SpYn
        Um5S4mcrZc3q9XJg/0E9MrAIAgSA1wBgFH/qvvRgMq2WpOWUW4VjuPvrPdJQX2cFBAgArwEAw370/Egc
        nUQGAFaqZFqzRpavpZyupFWrHzl2OJb7sw7o0wECgADos/fHOT+G/UkAQNJqSdyyVpalrZelORtkSUGy
        LDlGOVrqGC09mizL0tdL4ta1krQiAILVq9bJ5UuXzB4FEABeGwFgwg/nj8tXr9GFv7hooyw+FaISytEK
        PVbq2C3LXK9HBTimWZn7pbOjlQAgAHoXLvVhtj9x1SpZenADC94jQFh6ZIMkrlkt27Z+Ic1NjWaOAggA
        rwAASYFryFu2bJOlqetY/F6DgBoJJG/cLHW1NQQAAdA7ABrr/ZL89TZZfCKZReM1FSXL2q+3SG11FQFA
        ADwBAA1+WZ+zXRaVEABe0yKl1Uc/l9paAoAAeAIAGpr8srZkBwHgUQCsLE6RmoZqAoAA6AUAnQoAd/2y
        5iwB4FUAJJ3eJlVNHAEQAE8CQIsCQOlOAsCjIgAIAAKAACAACAACgAAgAAgAAoAAIAAIAAKAACAACAAC
        gAAgAAgAAoAAIAAIABYMAUAAEACUhxYCnUkhAAgAAqC/AmDF2RSpvlOtjzUBQAAQAAQAAUAAEAAEAAFA
        ABAABAABQAAQAAQAAUAAsGgIAAKAAKAIAAKg3wCgsaVe1pV9SQB4EgDJsursdqm9U0sAEABPeCx4e7N8
        fn6vLComALwIgOTyr6WptVEBgO8FIACeoAPX82QhAeA54ZimXj3MF4MQAH0/GPRa43VJPPO5Pmdk4XhH
        n57aIhf9FdLNV4MRAH2+HLSjRY8COA/goeG/7v2PSFsHXw5KADzDZCDOE3dX7NcQ4EjA/cW/41K6vsJj
        4uQfAeBVAIRCACOB5ep0AOePSKQAECjHSx0rHLPPTm+V9Gs5qvjrrSh+AsCrADAg0NHRqucEAAJcHcAl
        QqwToJwrHKOt5/dI5jdHpaLhmrSrUzqLip8A8DIAQicGjUuEWCeAoSTlXOEY3W1r1sfM5Ak/AqA/AuDx
        UQHlfNmVDwRAPwMARREABABFEQAEAEURAAQARQAQAAQARQDQCACKAKARABQBQCMAKAKARgBQBACNAKAI
        ABoBQBEANAKAIgBoBABFANBcBgDjFuGO9hZpbWmWO82NWviM70K3cZIYNwFAAISZiEi6qsobcq78rJw4
        XiC5R49I9pGDWviM7/A/bINtnVBQjJsAIABMSMRrVy9Lfl6OZGWmSXra3j6FbbAt9olUQTFuAoAAMEH+
        umo5XpgvmRmpOtky0vc9k7At9sG+dbVVthcS4yYACIAwdfPGN3Lk8IHnSsTeEvPwof26LbuKiHHbEjcB
        4GUAIIEOHsgMKxlDkxJt2VFMjNu2uAkALwIA548YQqIXMSMZQ5MSvZtftW3FOSrjtjduAsCjAMAkEs4j
        zUzG0KRE2/DBuN0dNwHgQQDo9wNevawnk8xORkNoGz7M7JUYt71xEwAeBQB6ClxOsqI3Cu2V4MPMXolx
        2xs3AeBBAKCHwIISXFO2KhkNwQd8mdErMW574yYAPDwCwKoyK3uj0F4Jvu4xblfGTQB4EABYV46lpXYl
        JHwZa9kZt3viJgA8CgCcI2J9uV0JCV9mnJcybnvjJgA8CgDcYYabTOxKSPiCT7fGHe75tFt/bwLAgwBA
        Mjc3NeiFIxnp1ickfMAXfIZTSNgXSR3u8tnn0aGD+6Xpdn3Ycbvx9yYAPAyA2431cvBAli1FBGGpKnyG
        W0hNtxt0UdoV94GsDGmsrws7bjf+3gSAhwFQ769Vveg+2xISvuAz3EJqbPBLZkaabXGn7tsr/tqasON2
        4+9NAHgYAHW11fLlzp22JSR8wacZhbTrq69si3vnFzukproq7Ljd+HsTAB4GgL+uRjas36h6uD029KJ7
        tC/4NAMAG5M3qzb/bEvc69cmS21N+OBy4+9NAHh8DmBF0hrZ8cV2y9emw8dK5cuMOQBMbK1auc62uJMS
        V+nTDjPmANz2exMAHr4M2NZ6Rzas2ySJnyZZ3iPBx4Z1m7XPcONub7urRgBbbYt73ZqN0tpyp9/+3gSA
        RwGAniFtX7rEzIqT7SkplvRKaBNtwwd8mbWmPiM907a49+5JNS1uN/7eBIBHAdB9r0PKS8tkdvQ8SZi/
        WP68e5epSYm20Cbahg/4gk8z4j5/7pzExlgfNwrp7JmzpsXtxt+bAPDwCADX1HFeOnN6rCxbmij79uw2
        JSnRxr69u3WbaBs+4MusnrS5qVHPA1gdd1LiatPOo936exMAHgWAkZT5efkSHTVXZs2coxMo3J7J6Ik+
        VW2hTbQNH2YmY/e9diksKLQ0bij3aK7pDwRx4+9NAHgYAJhVX792o+45kEAL1BAS55FGcj1PIuIv9kUb
        aAttom2Tl6T2LAlOXr/ZsrjXrt4Q9hJgr/zeBIBHAWD0plcqLkvCn5ZI1IxPtHB+nZS4Qnbu+ELSUgPP
        n3+ofUE9/A7bYNukxJV6X6OdhPlLdNvwYfrDNVWb165ckYUJy0yPe378Yrl86ZIlcbv19yYAPAoAo2cq
        KS6WeXMX6ERCbxJIzHhZsuhT1ausl+3btsmuL3fK7q93aeEzvsP/sE3s7PhH9kVbaNPKt9ag7dOnTkl8
        3ELT4o6bkyAni06qtq19G5ALf28CwKsAMFRSXKJ7EWN4aiQX/mJG/BOVdHM/ma+Fz/gudBtjGIrereRk
        sW0v2DhdckoWJCw1JW4Uv11xu+z3JgC8DgD0HhhC4jwSk0kzpz9MtKcJ22If7Is27HzPHnxdVacDWGgT
        iDv2ueNeuyZZKtSw3+64XfR7EwBeB4BxjopJpPy8Ar2cFOeYKCjIONc0ZHyP684rlq/Rs8/Y16Jz0KfO
        CeDy4LH8Y7JqxVo9nH7WuPNy8/Rls0jE7aLfmwDoDwAweibjunV5WZmkpWboGffPlq2QxQs/1cJnfIcV
        Z1h0Ylx3juSrtg3/KIpz5eWSjrg3IO6VP4k7VcVdVlraM9PvhLgd/nsTAP0FAKGJidVk+It15Ui6+rpa
        LXzGd6HbRKqA+o77biBuvxF3vUvidtzvTQD0NwA8qaeKdI/JuCMiAqC/A4Dq1yIACACKACAACACKAKAR
        ABQBQCMAKAKARgBQBACNAKAIABoBQBEANC4E4oKacIRYuzqC4kIgAiDiS4HrXbgU2D1xd3WqWO516oK/
        13Zb7jffkr80XtXCZ3ynYaC34VJgAsDqm2qe5eYU9T9s46ibgVwWt9HTd9+pkr9WZMjfcz+R7/cMlX+m
        /EZ+3PIrLXzGd/jfXyvSpbu5yu6RAQHQHwDQHbyttiAft6eufabbU7ENtsU+2Ddyt9W6L+6urk5V+NXy
        X6c3yA87fyv/Wv0zkSSfyHJf4G+ogt9hG2yLfbAv2iAACACTHqxR8YIP1ojV+2DfqxUVEXggiPviRu/9
        nzfy5fs/vyGycmCgyFc8o7Ct2uf73W/oNrr4QBACIFydwqO15i99rgLqraDQBtqyq5DcGvffLuySHzf9
        4vkKvxcQoI2/nf+KACAAXrwHReLPC3m4ZjgKPKRyoW7T6oeCujFu9NYo2Afrfx5e8YdAAG1pCPChoATA
        8547Y/iM3s+MIgotJrSJtq16vLYb48b5OobsYff8TxgJBE4HOgkAAuDZX7OF899whs99DavRNnyY/4IN
        98WN3hmTdjhvN7X4QyCA+YTAxCBfDEIAPEMhYQbceFWVFULb8GE2ANwYNy7bYeZeT/it8Fkj1TZ86EuE
        BAAB8LSXVeIymBW9aGhvCh/NJr4c1I1xY5EPrt3j8p0lvX/IKAA+sKZALywiAAiAJ76uuqxMXwu3qogM
        wQd8mfaabRfGjdV7WOSjr/Ov8Fkq+IAvvWKQACAAntSTYjWclb1oaG8KX2aNANwYN4bkWMVnae8fMgqA
        L5NPAwgALwEA6+FD365rdSHBF3z217ixjv/7PUMCq/msBoDygWXD+t4BAoAA6P08ul6vizfzElpfl9bg
        qynM82m3xo0ZedzM88+UX9s2AsC9A/ebK828GkAAeAkAuDMON8fYVUjwBZ/hAsDuuBcpX/66mjAB0KHv
        6MNNPXYBAL7+0njNzNMAAsBLAKirrZGFCctsKyT4gs9wAeC3OW68vbemuip8ADRckR83/9I+AChf8EkA
        EAC9FlJtTbXpq+ietroOPt0GgPnxi6W6qpIAIAC8BYAaldTxcYtsKyT4qgmzkAxwJcQvsS3uuDkLpPLW
        TQKAAPAWAKoqb0lsdLxthQRf8BkuADAcnxs737a4Y2bFya2bNwgAAsBbAMCwdubUWNsup8FXtSkjgCqZ
        NV21Oc2euKdPjuEIgADwHgAa/HUyY0qsTPrjTMsLCT7gq6G+LmwANDb4JWqaavNje+KeNinGnKsABADN
        SQuBWluaJX7OIhkz8kPLCwk+/jR3kfZpxkKghHlLbYs7LjZBWu42hb0KkACgOW4p8NaNKTLs9+8GRgFR
        FhRRVKCnho+tm1JMWwqcsnWHbXFvWr81/LgJAJrTAIAbXIqOF8mIoeNk5PDxMn3qbNMLCW2OHP6+9gFf
        Zt0MVFJULG8Pe8/yuIcPGSuFBYXS3d1BABAA3hsBNNb79YTakN+N1MNdMyfW0BbaRNuzps/VvswaAdxu
        rJfZUfMsjxsTl/X+Wo4ACADvAcDoTTPSsuQPb4zWw10kvu5Ro8IbPqMNtIU20TZ8mHJLbUjc+zMPyltv
        Whc3lLo33ZzHghEANCcCwJhVj4tdoHs8JD2GvuHMsOO8fJRqA22hTbQNH2Y/EahJjQIwsWhV3HNi5od9
        1YIAoDkaAD0P2Cgtkw/GTuopprfeHCPvjf5YpkycFVhwE4VHZPX22KxAz4ltsC32wb5GEX0wdrJu28ze
        PzTu8+XnZMJ7U0yOe5SMHzNRSs+cNS9uAoDmVAAYPerR7FwZ886HugCMIfBbQ8bI6HcmyITxk3XvOnVy
        tEyfEqOFz/gO/8M22NbYD22gLbRp9WPB83PzZeyoj3ogEG7co9+eINmHckx/FiABQHMsAAzlqoJFrx1a
        TMMGv9tzLj9cFcuIoWO18NmYOzC2edjzT9LFb9cLNvKP5j8yEnjRuN9XPX/24RwLHgVOANBcAAD0ehiy
        47wdRfJIQT1F2Bb7YF+0YferwXA6ED9n4QvHjXP+0jOl1sRNANDcAADj3BqTdplpWfry3Yhh43SRDHl9
        pP47dPAordDvcJ0flxMx2499rTjnf5a4cXkwK+OAxMyIk7efMW4sK07fl6En/CyLmwCguQUARo+qQVDv
        1wt4sIoPM+7TJkbLx+9P05o2MUZ/h/8VFRbpbbFPpF8PbgDs5ImT8vnm7SrGxXo9/8O4o/US6C0bt8mJ
        Yyd6Ct/aV4ERADQXAeDxgsJfrONHseCefgif8V3oNpEq/L7jvhOIuzqCcRMANDcCoLfCCpVTCt7xcRMA
        NC8AgCIACAACgCIAaAQARQDQCACKAKARABQBQCMAKAKARgBQBACNAKAIABoXAnEhEAFAc/lSYDyOG6/m
        xtt5IbwyG985fSmwI+ImAGhuAoDRUzarYikvK5O01AxJXr9ZPlu2Qr+aG8JnfIf/YRsUVqRHBo6NmwCg
        uQUAeAhmc1OjFOQXyMqktRIbMy/wai8lPEIrVMb32AbbYh/sa8qDNL0UNwFAcwMA0AtevVIhG9Ztkuio
        uc/13kBsi32w79WKCtsfCOLouAkAmhsAcKrklCyYvzSsF4ZiX7SBtuwCgOPjJgBoTgYAej0k/ry4haa8
        dhttzJu7ULdp9UNBXRE3AUBzKgBw3ovhM3o/M4ootJjQJtq24tzaVXETADQnAkDPmDc16vPfcIbPfQ2r
        0TZ8mP1iEFfFTQDQnAoAzIBjEsyqV2yjbfgwGwCuipsAoDkNAPr1Wrcb9GUwK3rR0N4UPpqD19v7ZdwE
        AM1pANCvBCsr09fCrSoiQ/ABX2a9Htx1cRMANCeOALAazspeNLQ3hS+zRgCui5sAoDkNAFgPjyWxdhUS
        fMFnv4ybAKA5CQCB8+h6vS7ezEtofV1ag6+mMM+n3Ro3AUBzHABwZxxujrGrkOALPsMFgN1xL1K+/HU1
        BAAB4C0A1NXWyMKEZbYVEnzBZ7gA8Nscd8L8JVJTXeU6APwfAUAA9FVItTXVpq+ie9rqOvh0GwDmxy+W
        6qrKsAHQ7b8iP2y0DwA/JP9S+yQACIBeCwnvyYuPW2RbIcFXTZiFZIArIX6JbXHHzVkglbduhg2Azpor
        8j9rfml98QcFX/BJABAAvRZSVeUtiY2Ot62Q4As+wwUAhuNzY+fbFnfMrDi5dfNG2ABor74if/3UPgDA
        F3wSAARAr4WEYe3MqbG2XU6Dr2pTRgBVMmu6anOaPXFPnxxjygigrfqqtMX/Sh4kWl/88AFfbdXXCAAC
        oPdCavDXyYwpsTLpjzMtLyT4gC+8mjtcADQ2+CVqmmrzY3vinjYpxoSrAO3S0XBL6ub8Rv6xQBXpSgsB
        oNqGD/jqaKjUvgkAAuAnam1plvg5i2TMyA8tLyT4+NPcRdqnGQuBEuYttS3uuNgEabnbFHbcnS23pWbx
        UOmcav0IAD60L+XTxJvHCACvLQXeujFFhv3+3cAoIMqCIooK9NTwsXVTimlLgVO27rAt7k3rt5p2R2DD
        9k+karRP/p5g0ShgZaBt+Gj44hMzh/8EgNcAgBtcio4XyYih42Tk8PEyfeps0wsJbY4c/r72AV9m3QxU
        UlQsbw97z/K4hw8ZK4UFhdLdbUIh3euUu8UZcmPcz+T2Rz755zKTIbAy0Cbaho+7JRnaJwFAADz5fLre
        ryfUhvxupB7umjmxhrbQJtqeNX2u9mXWCOB2Y73MjppnedyYuKz315o0AmiXjsYqqY77rXw70ietU3zy
        42cmQWBloC20ibbhA766zH0cGwHgJQAYvWlGWpb84Y3ReriLxNc9alR4w2e0gbbQJtqGDzN6/9C492ce
        lLfetC5uKHVvurmPM1NxNx3cIDdGD5Qb7wYKNuyRQLDnb1NtoU20DR9d90wd/hMAXgSAMaseF7tA93hI
        egx9w5lhx3n5KNUG2kKbaBs+zH4iUJMaBWBi0aq458TMD/uqRa+jgNvVUrPoDbkxMlCwGLLrOYEVzwmC
        4LbYVw/7UfyqzZpFb2ofXeY/jJUA8BoAeh6wUVomH4yd1FNMb705Rt4b/bFMmTgrsOAmCo/I6u2xWYGe
        E9tgW+yDfY0i+mDsZN12t/m9kW7zfPk5mfDeFJPjHiXjx0yU0jNnLYkb5+WtF/KlcsovdMF+O8onVWN9
        0jnDJ/9Y6JMHScHiXvkYEEK+wzbYtmtGYF+0gbbQJto2+dyfAPAyAIwe9Wh2rox550NdAMYQ+K0hY2T0
        OxNkwvjJunedOjlapk+J0cJnfIf/YRtsa+yHNtAW2rT6seD5ufkydtRHPRAIN+7Rb0+Q7EM5Fr8qrF3u
        FOySWx/9vGckoEEwzid3J/nkP2b75L/n++R/F/vkh2UB4TO+w/+wDbbVhR/s+dEW2uyyLm4CwKsAMJSr
        Cha9dmgxDRv8bs+5/HBVLCOGjtXCZ2PuwNjmYc8/SRe/XS8GyT+a/8hI4EXjfl/1/NmHc2yL+86xXT0j
        AV3I7z4s6ltjfFKtirxmfED4jO9CtzGKH23cKfjK6ngJAK8DAL0ehuw4b0eRPFJQTxG2xT7YF23Y/Wow
        nA7Ez1n4wnHjnL/0TKm9LzdVvlovFOjzdj0xGAKCp2pkYMIP8wl62G993ASA1wFgnFtj0i4zLUtfvhsx
        bJwukiGvj9R/hw4epRX6Ha7z43IiZvuxryXnzs8QNy4PZmUckJgZcfL2M8aNZcXp+zL0hF8k4sb5Oibt
        MHOPy3c3x/0sUNyGRgUV8h22wbbYR0/4WXPOTwD0RwAYPaoGQb1fL+DBKj7MuE+bGC0fvz9Na9rEGP0d
        /ldUWKS3xT6Rfj24AbCTJ07K55u3qxgX6/X8D+OO1kugt2zcJieOnegp/EjGrXtvgKCxSi/gwSq+2sVD
        pSrmN1I5/Vda+Izv8D8sKNLX+QEs++ImAPoLAB4vKPzFOn4UC+7ph/AZ34VuE7EC6jPuO4G4q50ftwEC
        /fyAltv6Zp72mqta+KzX9mN5r97G9rgJgP4GgN4KK1SOKRyPxq2LHAXf1RGJgicACACKIgAIAIoiACJn
        ba13oFc7O1oJACoiQu4hB5GLNJut8ta3vqrKG/jxCQAqIkLuIQeRizSb7WRRoa/45PFXm27XEwBURITc
        Qw4iF2k224H9Gb6M9H2v3rp5vdtVs9iUJ4ScQ+4hBw/sT2dB2m2ZGam+3V9/+Wp52ZludS7GpKTsPv8X
        5B5yELlIiwAA9u3d/Wpebnb3neZGJiVla++PnEPuIQcJgAgBAMOv/Vnp3de/uSI8DaDsBAByDrmHHCQA
        IgiArMy07qITx0x5vDZFPevj45FzyD0CwAEjgCOHD8g31yqYnJQtQq4dPrSfIwCnAAAHo/BYnjTU1/JU
        gLJ06I8cQ64RAA4DwNGcw3L2TIncvXObEKAsKX7kFnIMuUYAOAwAuUePyLGCXLlwvky/tooQoMwsfuQU
        cgs5hlwjAJwBgFfUQegyAICh2cmiQrl4oVyamxqYvJQpQi4hp5BbyLEQAHQhBwmAyAHgZXUQmh8HwJnT
        xfqA+euqpb3tLkcD1Av1+h3tLTqHkEvIqV4A0KRy8N8IgMgB4CV1ECp6A8C58rNy+dJ5+fb6VX0QjcuE
        jz8Ig6IefzAKcgU5g9xBDiGXngCACuQgARABy8pM812+eAH3BKT1BYBLF8/pz+fPlcrVK5ek8ta3Uu+v
        wY0cejUXRSEXkBPIDeQIcgU5g9zpCwAq91LPl59RnVEaC9L2EUBWmu/ggUwAIFodjAdPAkBvBzA/L0cf
        xJzsQ4I1BFT/FXIAuYCceNb8CQLgAXIPOZiRzhGA/SMANezCj6/0mjqQ958HAAbB1ShC0tP2Uv1YyIG+
        RpB95E83cg85mJXFuwEjYocOZvnUQRyoAJD2ogBQ53BUP9aLAgA5h9xDDtIiCAA1hPNlHzk4WB2U7wgA
        yiYAfIecy1a5RwBE0A4fPuA7mnPYtz8rfUBebnYKAUDZAQDkWlZW2gDkngIBCzGSdjT7sC8/LwcapA7O
        NQKAshgA15BryLmcnEMswEhbXt5BDYDjhflKBa8XnzzeSgBQVgAAuaXy7HXkmu508gkAR9ixglxf0YkC
        PCTUV1J8Yrg6WK0EAGUyAFpVbo1Ajh0/XqBzjuYgO3nimAaAOlC+0rOn/l0dtKsEAGUSAK6pnHoduYUc
        K1K5RnOgnT51EiMAX1npad+F82WD1MFLuXTx3HcEAPUiAEDuIIcunCsbhJxCbiHHaA628rLTPnXgAABf
        ZeWNAerz79TBTFUHtVsd3AcEAPUUADxQuXJf5Uyayp3BN29eH4BcQk6Vl59hgbnBzp0756uouOi7onTx
        Qrk6LSgZqMj9mjq4s44dy01VBxs3EDWrg4/bObup/ivkAHIBOaHO69NUjkQjV86eLh6I3EEOVVy+4Lt4
        8SILy212/nwp5gN8ZWVn9NANb3A5e6oYawdeUgf9ZXXwX8EDHaj+K+QAcgE5cTaYI8iVcjXkR+6g96d5
        wAoL83x5R7P17C0WcKiDru8oVElA9WMhB5ALyAnkhhoJqFzJZ8HQaDQajUaj0Wg0Go1Go9FoNBqNRqPR
        aDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUZziP0/YaPQT3LZBjEAAAAASUVORK5CYII=
</value>
  </data>
</root>